<launch>
  <arg name="create_manager" default="true" />
  <arg name="manager" default="camera_nodelet_manager" />
  <arg name="gui" default="true" />
  <arg name="/multisense_pcl2" default="/multisense_local/image_points2_color" />
  <arg name="/processed_pcl2" default="/depth_image_creator/output_cloud" />
  <arg name="/multisense_camerainfo" default="/multisense_local/left/camera_info" />  
  <arg name="/camerainfo" default="/static_virtual_camera/camera_info" />
  
  <node if="$(arg create_manager)"
        pkg="nodelet" type="nodelet" name="camera_nodelet_manager"
        args="manager" output="screen"/>

  <arg name="interactive_marker" default="false" />
  <node pkg="rm_debris_vision" name="static_virtual_camera" type="static_virtual_camera.py" output="screen" />
  <!-- <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="1.4 0.0 0.07 -0.707107 0.707017 0.0 0.0 BODY static_virtual_camera 100" unless="$(arg interactive_marker)" /> <!-\- original -\-> -->
  <!-- robot coordinate? -->
  
  <!-- <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="0.0 0.0 0.6 -0.5 0.5 -0.5 0.5 BODY static_virtual_camera 100" unless="$(arg interactive_marker)" /> -->
  <node pkg="tf" type="static_transform_publisher" name="virtual_camera_broadcaster" args="0.2 -0.4 1.6 -0.5 0.5 -0.5 0.5 LLEG_LINK5 static_virtual_camera 100" unless="$(arg interactive_marker)" />
  <!-- progn (setq theta -90) (setq vec #f(1 -1 1)) (normalize-vector (concatenate float-vector  (scale (sin (deg2rad (/ theta 2.0) )) vec) (scale (cos (deg2rad (/ theta 2.0))) (float-vector 1)))) -->
 
  <!-- <node pkg="transform_coords" name="transform_pcl" type="transform_coords_node" output="screen" /> -->

  <node pkg="nodelet" type="nodelet" name="passthrough_x"
        args="load pcl/PassThrough $(arg manager)" output="screen">
    <remap from="~input" to="$(arg /multisense_pcl2)" />
    <rosparam>
      filter_field_name: z
      filter_limit_min:  1.5
      filter_limit_max:  5
      filter_limit_negative: False
    </rosparam>
  </node>

  <!-- <node name="bilateral_filter" -->
  <!--       pkg="nodelet" type="nodelet" -->
  <!--       args="standalone jsk_pcl/BilateralFilter"> -->
  <!--   <remap from="~input" to="$(arg /multisense_pcl2)" /> -->
    <!-- <remap from="~input" to="/multisense_local/organized_image_points2_color" /> -->
  <!-- </node> -->
  
  <!-- get image from static virtual camera -->
  <node name="depth_image_creator"
        pkg="nodelet" type="nodelet"
        args="load jsk_pcl/DepthImageCreator /$(arg manager)">
    <!-- <remap from="~input" to="/bilateral_filter/output" /> -->
    <remap from="~input" to="$(arg /multisense_pcl2)" />
    <!-- <remap from="~input" to="/passthrough_x/output" />     -->
    <remap from="~info" to="$(arg /camerainfo)" />
    <rosparam>
      use_approximate: true
      max_queue_size: 20
    </rosparam>
  </node>

  <!-- remove noise -->
  <node name="dilate_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/DilateMaskImage $(arg manager)">
    <remap from="~input" to="/depth_image_creator/output_image" />
    <rosparam>
      method: 0
      size: 3
    </rosparam>
  </node>
  <node name="erode_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ErodeMaskImage $(arg manager)">
    <remap from="~input" to="/dilate_mask_image/output" />
    <rosparam>
      method: 0
      size: 3
    </rosparam>
  </node>
  
  <node name="robot_to_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/RobotToMaskImage $(arg manager)">
    <!-- args="standalone jsk_perception/RobotToMaskImage"> -->   
    <remap from="~input/camera_info" to="$(arg /camerainfo)"/>
    <rosparam>
      robot_description : "jaxon_red"
      self_see_links:
        - name: RLEG_LINK0
        - name: RLEG_LINK1
        - name: RLEG_LINK2
        - name: RLEG_LINK3
        - name: RLEG_LINK4
        - name: RLEG_LINK5
        - name: LLEG_LINK0
        - name: LLEG_LINK1
        - name: LLEG_LINK2
        - name: LLEG_LINK3
        - name: LLEG_LINK4
        - name: LLEG_LINK5
        <!-- - name: CHEST_LINK0 -->
        <!-- - name: CHEST_LINK1 -->
        <!-- - name: CHEST_LINK2 -->
        <!-- - name: HEAD_LINK0 -->
        <!-- - name: HEAD_LINK1 -->
        
        <!-- - name: RARM_FINGER0 -->
        <!-- - name: RARM_FINGER1 -->
        <!-- jikki -->
        - name: R_thk_finger1
        - name: R_thk_finger2
        - name: R_thk_palm
        
        - name: RARM_LINK0
        - name: RARM_LINK1
        - name: RARM_LINK2
        - name: RARM_LINK3
        - name: RARM_LINK4
        - name: RARM_LINK5
        - name: RARM_LINK6
        - name: RARM_LINK7
        <!-- - name: LARM_FINGER0 -->
        <!-- - name: LARM_FINGER1 -->
        <!-- jikki -->
        - name: L_thk_finger1
        - name: L_thk_finger2
        - name: L_thk_palm

        - name: LARM_LINK0
        - name: LARM_LINK1
        - name: LARM_LINK2
        - name: LARM_LINK3
        - name: LARM_LINK4
        - name: LARM_LINK5
        - name: LARM_LINK6
        - name: LARM_LINK7
      self_see_default_padding: 0.1
    </rosparam>
  </node>

  <!-- <node name="rviz" -->
  <!--       pkg="rviz" type="rviz" -->
  <!--       args="-d $(find jsk_perception)/sample/config/sample_robot_to_mask_image.rviz"/> -->

  <!-- 動いているところだけ抽出 -->
  <!-- <node name="background_subtraction" -->
  <!--       pkg="jsk_perception" type="background_substraction"> -->
  <node name="background_subtraction"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/BackgroundSubstraction  $(arg manager)"> 
        <!-- args="standalone jsk_perception/BackgroundSubstraction"> -->
        <!-- <remap from="~image" to="/multisense_local/left/image_rect_color" /> -->
        <remap from="~image" to="erode_mask_image/output" />
        <!-- <remap from="~image" to="/passthrough_x/output" /> -->
  </node>

  <!-- マスク画像を抽出した動画に適用o -->
  <node name="apply_mask_image"
        pkg="nodelet" type="nodelet"
        args="load jsk_perception/ApplyMaskImage $(arg manager)">
    <remap from="~input" to="background_subtraction/output" />
    <remap from="~input/mask" to="/robot_to_mask_image/output" />
    <rosparam>
      approximate_sync: true
    </rosparam>
  </node>

  
  <!-- <node name="subtract_imagerect_mask" -->
  <!--       pkg="jsk_perception" type="subtract_mask_image"> -->
  <!--   <!-\- <remap from="~input/src1" to="background_subtraction/output" /> -\-> -->
  <!--   <remap from="~input/src1" to="/multisense_local/left/image_rect_color" /> -->
  <!--   <remap from="~input/src2" to="/robot_to_mask_image/output" /> -->
  <!-- </node> -->
  
  <!-- <node name="subtract_imagerect_maskmask" -->
  <!--       pkg="jsk_perception" type="subtract_mask_image"> -->
  <!--   <remap from="~input/src2" to="background_subtraction/output" /> -->
  <!--   <!-\- <remap from="~input/src1" to="/multisense_local/left/image_rect_color" /> -\-> -->
  <!--   <remap from="~input/src1" to="subtract_imagerect_mask/output" /> -->
  <!--   <!-\- <remap from="~input/src2" to="/robot_to_mask_image/output" />    -\->  -->
  <!-- </node> -->

  <!-- マスク画像の結果と点群を結びつけて、点のインダイスを出力する -->
  <arg name="camera" value="/multisense_local" />
  <!-- <node name="mask_image_filter" pkg="jsk_pcl_ros" type="mask_image_filter"> -->
  <node pkg="nodelet" type="nodelet"
        name="mask_image_filter"
        args="load jsk_pcl/MaskImageFilter $(arg manager)"
        output="screen" clear_params="true">
    
    <param name="~negative" value="false" />
    <remap from="~input" to="$(arg /processed_pcl2)" />
    <!-- <remap from="~input/mask" to="/apply_mask_image/output" />     -->
    <remap from="~input/mask" to="background_subtraction/output" />
    <remap from="~input/camera_info" to="$(arg /camerainfo)" />
  </node>

  <!-- インダイスを使って該当点群を抽出 -->
  <!-- <node name="extract_indices" pkg="jsk_pcl_ros" type="extract_indices"> -->
  <node pkg="nodelet" type="nodelet"
        name="extract_indices"
        args="load jsk_pcl/ExtractIndices $(arg manager)"
        output="screen" clear_params="true">    
    <remap from="~input" to="$(arg /processed_pcl2)" />
    <remap from="~indices" to="/mask_image_filter/output" />
  </node>

  <!-- クラスタリング -->
  <node pkg="nodelet" type="nodelet"
        name="clustering"
        args="load jsk_pcl/EuclideanClustering $(arg manager)"
        output="screen" clear_params="true">
    <remap from="~input" to="/extract_indices/output" />
    <rosparam>
      tolerance: 0.15
      min_size: 300
    </rosparam>
  </node>

  <node pkg="nodelet" type="nodelet"
        name="cluster_decomposer"
        args="load jsk_pcl/ClusterPointIndicesDecomposer $(arg manager)"
        output="screen" clear_params="true">
    <remap from="~input" to="/extract_indices/output" />
    <remap from="~target" to="/clustering/output" />
    <rosparam>
      min_size: 300
    </rosparam>
  </node>

  <!-- <!-\- 表示 -\-> -->
  <!-- <group if="$(arg gui)"> -->
  <!--   <node name="image_view_mask" -->
  <!--         pkg="image_view" type="image_view"> -->
  <!--     <remap from="image" to="/robot_to_mask_image/output"/> -->
  <!--   </node> -->
  <!--   <node name="image_view_rgb" -->
  <!--         pkg="image_view" type="image_view"> -->
  <!--     <remap from="image" to="subtract_mask_image/output"/> -->
  <!--   </node> -->
  <!--   <node name="image_view_fg" -->
  <!--         pkg="image_view" type="image_view"> -->
  <!--     <remap from="image" to="background_subtraction/output"/> -->
  <!--   </node> -->
  <!-- </group> -->

</launch>

